<script type="text/javascript">
  Chart.defaults.global.defaultFontColor = "white";
  Chart.defaults.global.legend.display = false;
  Chart.defaults.global.defaultFontStyle = 'bold';
  Chart.defaults.global.defaultFontSize = 12;
  var json_frametime
  var id = <%= BenchesGame.where(game_id: @benchmark.games.order(name: :asc).first.id, bench_id: @benchmark.id).last.id %>
  <% benches_game_id = BenchesGame.where(game_id: @benchmark.games.order(name: :asc).first.id, bench_id: @benchmark.id).last.id %>
  
  $.getJSON( "/benches_games/" + id + "/full_frametime", function( data ) {
    json_frametime = data
  })
    
  var count = 0
  function onRefreshFrametime(chart) {
    count++
  	frametimechart.data.datasets.forEach(function(dataset, i) {
      if (json_fps[i]["data"].length > count){
      console.log(count)
  		dataset.data.push({
  			x: start + (json_fps[i].data[count][0] / 1000),
  			y: json_frametime[i].data[count][1]
  		});
      }
  	});
  }

  var configFrametime = {
    type: 'line',
    gridLines: {
      display: false ,
      color: "#FFFFFF"
    },
    data: {
      labels: [],
      datasets: [
        <% require 'open-uri' %>
        <% json = JSON.load(BenchesGame.find(benches_game_id).full_fps) %>
        <% json.each do |series| %>
          {
            lineTension: 0,
            data: [],
            label: "<%= series['name'] %>",
            borderColor: '<%= series['color'] %>',
            backgroundColor: '<%= series['color'] %>',
            fill: false,
            borderWidth: 1,
          },
        <% end %>
      ],
      borderWidth: 3
    },
    options: {
      plugins: {
          streaming: {
              frameRate: 60               // chart is drawn 5 times every second
          }
      },
      // title: {
      //   display: true,
      //   text: 'Frametime',
      //   lineHeight: 3,
      //   position: 'top',
      //   padding: -10
      // },
      tooltips: {
        enabled: false
      },
      elements: {
      point:{
          radius: 0
        },
      },
      scales: {
        xAxes: [{
          ticks: {
            display: false
          },
          gridLines: {
            color: 'white',
            lineWidth: 0
          },
          type: 'realtime',
          realtime: {
            duration: 15000,
            refresh: <%= @benchmark.inputs.minimum(:frametime) %>,
            delay: 100,
            onRefresh: onRefreshFrametime
          }
        }],
        yAxes: [{
          position: 'right',
          ticks: {
            reverse: false,
            stepSize: 5,
            min: <%#= (BenchesGame.find(benches_game_id).inputs.minimum(:frametime) * 0.75).round(-1) + 1 %>1 ,
            max: <%#= (BenchesGame.find(benches_game_id).inputs.maximum(:frametime) * 1).round() %>25,
          },
          gridLines: {
            color: 'white',
            lineWidth: 1
          }
        },{
          position: 'left',
          ticks: {
            reverse: false,
            display: false,
            stepSize: 5,
            min: <%#= (BenchesGame.find(benches_game_id).inputs.minimum(:frametime) * 0.75).round(-1) + 1%>51,
            max: <%#= (BenchesGame.find(benches_game_id).inputs.maximum(:frametime) * 1).round()%>25,
          },
          gridLines: {
            color: 'white',
            lineWidth: 1
          }
        }
        ]
    },
    }
  }

$( document ).on('turbolinks:load', function() {
  	var ctxFrametime = document.getElementById('frametimechart').getContext('2d');
  	frametimechart = new Chart(ctxFrametime, configFrametime);
  });

</script>